// the template of ac自动机
//测试连接 ：https://www.luogu.com.cn/problem/P5357
#include<iostream>
#include<stack>
#include<bitset>
#include<string.h>
#include<queue>
#include<algorithm>
#include<limits.h>
#include<cmath>
#include<vector>
using namespace std;
typedef long long ll;
#define endl "\n"

const int N=2*1e5+5;
int fail[N],tr[N][26],e[N],cnt=0,ci[N],n;
int h[N],to[N],count1=1,nex[N];
void insert(int index,string s)
{
	int u=0;
	for(int i=0;i<s.size();i++)
	{
		int  c=s[i]-'a';
		if(tr[u][c]==0)
		{
			tr[u][c]=++cnt;
		}
		u=tr[u][c];
	}
	e[index]=u;
	
}
void setfail()
{
	queue<int> q;
	q.push(0);
	int num=1;
	while(!q.empty())
	{
		int sz=q.size();
		while(sz--)
		{
			int r=q.front();q.pop();
			for(int i=0;i<26;i++)
			{
				
				
				if(tr[r][i])
				{
					if(num!=1) fail[tr[r][i]]=tr[fail[r]][i];
				//	cout<<tr[r][i]<<"的fail是"<<fail[tr[r][i]]<<endl;
					q.push(tr[r][i]);
				}
				else
				{
					tr[r][i]=tr[fail[r]][i];
				}
			
			}
			
		}
		num++;
	}
}

void add(int u,int v)
{
	nex[count1]=h[u];
	to[count1]=v;
	h[u]=count1++;
}
void dfs(int u)
{
	for(int k=h[u];k;k=nex[k])
	{
		int v=to[k];
		dfs(v);
		ci[u]+=ci[v];
	}
}
int main()
{
	ios::sync_with_stdio(0),cin.tie(0),cout.tie(0);
	cin>>n;

	for(int i=0;i<n;i++)
	{
		string s;cin>>s;
		insert(i,s);
	
	}

	fail[0]=0;
	setfail();
	for(int i=1;i<=cnt;i++)
	{
		add(fail[i],i);
	}
	string tar;cin>>tar;
	int u=0;
	for(int i=0;i<tar.size();i++)
	{
		int c=tar[i]-'a';
		u=tr[u][c];
		ci[u]++;
	}
	dfs(0);

	for(int i=0;i<n;i++) cout<<ci[e[i]]<<endl;

	return 0;
	
}
